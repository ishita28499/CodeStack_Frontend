{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISHITA\\\\Downloads\\\\Atul\\\\Frontend\\\\src\\\\pages\\\\AllTagsPage\\\\AllTagsPage.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTags } from '../../redux/tags/tags.actions';\nimport handleSorting from '../../services/handleSorting';\nimport TagPanel from './TagPanel/TagPanel.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport SearchBox from '../../components/SearchBox/SearchBox.component';\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup.component';\nimport Pagination from \"../../components/Pagination/Pagination.component\";\nimport './AllTagsPage.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsPerPage = 12;\n\nconst AllTagsPage = _ref => {\n  _s();\n\n  var _tags$filter;\n\n  let {\n    getTags,\n    tag: {\n      tags,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getTags();\n  }, [getTags]);\n  const [page, setPage] = useState(1);\n  const [fetchSearch, setSearch] = useState('');\n  const [sortType, setSortType] = useState('Popular');\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearch(e.target.value);\n    setPage(1);\n  };\n\n  const handlePaginationChange = (e, value) => setPage(value);\n\n  return loading || tags === null ? /*#__PURE__*/_jsxDEV(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainbar\",\n      className: \"tags-page fc-black-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"headline\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-body\",\n        children: \"A tag is a keyword or label that categorizes your question with other, similar questions. Using the right tags makes it easier for others to find and answer your question.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline-count\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [new Intl.NumberFormat('en-IN').format(tags.length), \" tags\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags-box pl16 pr16 pb16\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n          placeholder: 'filter by tag name',\n          handleChange: handleChange,\n          width: '200px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          buttons: ['Popular', 'Name', 'New'],\n          selected: sortType,\n          setSelected: setSortType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-browser\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-layout\",\n          children: (_tags$filter = tags.filter(tag => tag.tagname.toLowerCase().includes(fetchSearch.toLowerCase()))) === null || _tags$filter === void 0 ? void 0 : _tags$filter.sort(handleSorting(sortType)).slice((page - 1) * itemsPerPage, (page - 1) * itemsPerPage + itemsPerPage).map((tag, index) => /*#__PURE__*/_jsxDEV(TagPanel, {\n            tag: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        page: page,\n        itemList: tags.filter(tag => tag.tagname.toLowerCase().includes(fetchSearch.toLowerCase())),\n        itemsPerPage: itemsPerPage,\n        handlePaginationChange: handlePaginationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllTagsPage, \"b1cQjz//Gx9OPGsDnIbk/8NeRQI=\");\n\n_c = AllTagsPage;\nAllTagsPage.propTypes = {\n  getTags: PropTypes.func.isRequired,\n  tag: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tag: state.tag\n});\n\nexport default connect(mapStateToProps, {\n  getTags\n})(AllTagsPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTagsPage\");","map":{"version":3,"names":["React","useEffect","Fragment","useState","connect","PropTypes","getTags","handleSorting","TagPanel","Spinner","SearchBox","ButtonGroup","Pagination","itemsPerPage","AllTagsPage","tag","tags","loading","page","setPage","fetchSearch","setSearch","sortType","setSortType","handleChange","e","preventDefault","target","value","handlePaginationChange","Intl","NumberFormat","format","length","filter","tagname","toLowerCase","includes","sort","slice","map","index","propTypes","func","isRequired","object","mapStateToProps","state"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/pages/AllTagsPage/AllTagsPage.component.jsx"],"sourcesContent":["import React, {useEffect, Fragment, useState} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getTags} from '../../redux/tags/tags.actions';\nimport handleSorting from '../../services/handleSorting';\n\nimport TagPanel from './TagPanel/TagPanel.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport SearchBox from '../../components/SearchBox/SearchBox.component';\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup.component';\nimport Pagination from \"../../components/Pagination/Pagination.component\";\n\nimport './AllTagsPage.styles.scss';\n\nconst itemsPerPage = 12;\n\nconst AllTagsPage = ({getTags, tag: {tags, loading}}) => {\n  useEffect(() => {\n    getTags();\n  }, [getTags]);\n\n  const [page, setPage] = useState(1);\n  const [fetchSearch, setSearch] = useState('');\n  const [sortType, setSortType] = useState('Popular');\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearch(e.target.value);\n    setPage(1)\n  };\n\n  const handlePaginationChange = (e, value) => setPage(value);\n\n  return loading || tags === null ? (\n    <Spinner type='page' width='75px' height='200px' />\n  ) : (\n    <Fragment>\n      <div id='mainbar' className='tags-page fc-black-800'>\n        <h1 className='headline'>Tags</h1>\n        <p className='fs-body'>\n          A tag is a keyword or label that categorizes your question with other,\n          similar questions. Using the right tags makes it easier for others to\n          find and answer your question.\n        </p>\n        <div className='headline-count'>\n          <span>{new Intl.NumberFormat('en-IN').format(tags.length)} tags</span>\n        </div>\n        <div className='tags-box pl16 pr16 pb16'>\n          <SearchBox\n            placeholder={'filter by tag name'}\n            handleChange={handleChange}\n            width={'200px'}\n          />\n          <ButtonGroup\n            buttons={['Popular', 'Name', 'New']}\n            selected={sortType}\n            setSelected={setSortType}\n          />\n        </div>\n        <div className='user-browser'>\n          <div className='grid-layout'>\n            {tags\n              .filter((tag) =>\n                tag.tagname.toLowerCase().includes(fetchSearch.toLowerCase())\n              )\n              ?.sort(handleSorting(sortType))\n              .slice((page - 1) * itemsPerPage, (page - 1) * itemsPerPage + itemsPerPage)\n              .map((tag, index) => (\n                <TagPanel key={index} tag={tag} />\n              ))}\n          </div>\n        </div>\n        <Pagination\n          page={page}\n          itemList={tags.filter((tag) => tag.tagname.toLowerCase().includes(fetchSearch.toLowerCase()))}\n          itemsPerPage={itemsPerPage}\n          handlePaginationChange={handlePaginationChange}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nAllTagsPage.propTypes = {\n  getTags: PropTypes.func.isRequired,\n  tag: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tag: state.tag,\n});\n\nexport default connect(mapStateToProps, {getTags})(AllTagsPage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}