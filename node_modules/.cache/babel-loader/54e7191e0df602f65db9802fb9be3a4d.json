{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISHITA\\\\Downloads\\\\Atul\\\\Frontend\\\\src\\\\pages\\\\PostForm\\\\AskForm\\\\AskForm.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addPost } from '../../../redux/posts/posts.actions';\nimport MarkdownEditor from '../../../components/MarkdownEditor/MarkdownEditor.component';\nimport './AskForm.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AskForm = _ref => {\n  _s();\n\n  let {\n    addPost\n  } = _ref;\n  const [formData, setFormData] = useState({\n    title: '',\n    body: '',\n    tagname: ''\n  });\n  const markdownEditorRef = useRef(null);\n  const {\n    title,\n    body,\n    tagname\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    addPost({\n      title,\n      body,\n      tagname\n    });\n    setFormData({\n      title: '',\n      body: '',\n      tagname: ''\n    });\n    markdownEditorRef.current.cleanEditorState();\n  };\n\n  const updateConvertedContent = htmlConvertedContent => {\n    setFormData({ ...formData,\n      body: htmlConvertedContent\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-form p16 s-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-layout\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label s-label\",\n              children: [\"Title\", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title-desc fw-normal fs-caption\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"title-input s-input\",\n              type: \"text\",\n              name: \"title\",\n              value: title,\n              onChange: e => onChange(e),\n              id: \"title\",\n              placeholder: \"e.g. Is there an R function for finding the index of an element in a vector?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label s-label fc-black-800\",\n              children: [\"Body\", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"body-desc fw-normal fs-caption fc-black-800\",\n                children: \"Include all the information someone would need to answer your question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"s-textarea rich-text-editor-container\",\n              children: /*#__PURE__*/_jsxDEV(MarkdownEditor, {\n                ref: markdownEditorRef,\n                onChange: updateConvertedContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tag-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label s-label\",\n              children: [\"Tag Name\", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"tag-desc fw-normal fs-caption\",\n                children: \"Add up to 5 tags to describe what your question is about\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"tag-input s-input\",\n              type: \"text\",\n              name: \"tagname\",\n              value: tagname,\n              onChange: e => onChange(e),\n              id: \"tagname\",\n              placeholder: \"e.g. (ajax django string)\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-button mt32\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"s-btn s-btn__primary\",\n          id: \"submit-button\",\n          name: \"submit-button\",\n          children: \"Post your question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AskForm, \"tzdGvDe9a+EcmwLPgcA/ZUY40LQ=\");\n\n_c = AskForm;\nAskForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPost\n})(AskForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AskForm\");","map":{"version":3,"names":["React","Fragment","useState","useRef","connect","PropTypes","addPost","MarkdownEditor","AskForm","formData","setFormData","title","body","tagname","markdownEditorRef","onChange","e","target","name","value","onSubmit","preventDefault","current","cleanEditorState","updateConvertedContent","htmlConvertedContent","propTypes","func","isRequired"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/pages/PostForm/AskForm/AskForm.component.jsx"],"sourcesContent":["import React, {Fragment, useState, useRef} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {addPost} from '../../../redux/posts/posts.actions';\nimport MarkdownEditor from '../../../components/MarkdownEditor/MarkdownEditor.component';\n\nimport './AskForm.styles.scss';\n\nconst AskForm = ({addPost}) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    body: '',\n    tagname: '',\n  });\n\n  const markdownEditorRef = useRef(null);\n\n  const {title, body, tagname} = formData;\n\n  const onChange = (e) =>\n    setFormData({...formData, [e.target.name]: e.target.value});\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    addPost({title, body, tagname});\n    setFormData({\n      title: '',\n      body: '',\n      tagname: '',\n    });\n    markdownEditorRef.current.cleanEditorState();\n  };\n\n  const updateConvertedContent = (htmlConvertedContent) => {\n    setFormData({...formData, body: htmlConvertedContent});\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className='question-form p16 s-card'>\n          <div className='question-layout'>\n            <div className='title-grid'>\n              <label className='form-label s-label'>\n                Title\n                <p className='title-desc fw-normal fs-caption'>\n                  Be specific and imagine youâ€™re asking a question to another\n                  person\n                </p>\n              </label>\n              <input\n                className='title-input s-input'\n                type='text'\n                name='title'\n                value={title}\n                onChange={(e) => onChange(e)}\n                id='title'\n                placeholder='e.g. Is there an R function for finding the index of an element in a vector?'\n                required\n              />\n            </div>\n            <div className='body-grid'>\n              <label className='form-label s-label fc-black-800'>\n                Body\n                <p className='body-desc fw-normal fs-caption fc-black-800'>\n                  Include all the information someone would need to answer your\n                  question\n                </p>\n              </label>\n              <div className='s-textarea rich-text-editor-container'>\n                <MarkdownEditor\n                  ref={markdownEditorRef}\n                  onChange={updateConvertedContent}\n                />\n              </div>\n            </div>\n            <div className='tag-grid'>\n              <label className='form-label s-label'>\n                Tag Name\n                <p className='tag-desc fw-normal fs-caption'>\n                  Add up to 5 tags to describe what your question is about\n                </p>\n              </label>\n              <input\n                className='tag-input s-input'\n                type='text'\n                name='tagname'\n                value={tagname}\n                onChange={(e) => onChange(e)}\n                id='tagname'\n                placeholder='e.g. (ajax django string)'\n                required\n              />\n            </div>\n          </div>\n        </div>\n        <div className='post-button mt32'>\n          <button\n            className='s-btn s-btn__primary'\n            id='submit-button'\n            name='submit-button'\n          >\n            Post your question\n          </button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nAskForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {addPost})(AskForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}