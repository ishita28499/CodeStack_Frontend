{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from './alert.types';\nconst InitialState = [];\nexport default function alert() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== action.payload);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","InitialState","alert","state","action","type","payload","filter","id"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/redux/alert/alert.reducer.js"],"sourcesContent":["import {SET_ALERT, REMOVE_ALERT} from './alert.types';\n\nconst InitialState = [];\n\nexport default function alert(state = InitialState, action) {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,YAAnB,QAAsC,eAAtC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,KAAT,GAA6C;EAAA,IAA9BC,KAA8B,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;;EAC1D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,SAAL;MACE,OAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;IACF,KAAKN,YAAL;MACE,OAAOG,KAAK,CAACI,MAAN,CAAcL,KAAD,IAAWA,KAAK,CAACM,EAAN,KAAaJ,MAAM,CAACE,OAA5C,CAAP;;IACF;MACE,OAAOH,KAAP;EANJ;AAQD"},"metadata":{},"sourceType":"module"}