{"ast":null,"code":"import { GET_TAG, GET_TAGS, TAG_ERROR } from './tags.types';\nimport axios from 'axios';\nimport { setAlert } from '../alert/alert.actions';\nimport config from \"../../config\";\nexport const getTag = tagName => async dispatch => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/tags/${tagName}`);\n    dispatch({\n      type: GET_TAG,\n      payload: res.data.data\n    });\n  } catch (err) {\n    // dispatch(() => history.push('/questions'))\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: TAG_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getTags = () => async dispatch => {\n  try {\n    const res = await axios.get(config.BASE_URL + '/api/tags');\n    dispatch({\n      type: GET_TAGS,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: TAG_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["GET_TAG","GET_TAGS","TAG_ERROR","axios","setAlert","config","getTag","tagName","dispatch","res","get","BASE_URL","type","payload","data","err","response","message","msg","statusText","status","getTags"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/redux/tags/tags.actions.js"],"sourcesContent":["import {GET_TAG, GET_TAGS, TAG_ERROR} from './tags.types';\nimport axios from 'axios';\nimport {setAlert} from '../alert/alert.actions';\nimport config from \"../../config\";\n\nexport const getTag = (tagName) => async (dispatch) => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/tags/${tagName}`);\n\n    dispatch({\n      type: GET_TAG,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    // dispatch(() => history.push('/questions'))\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: TAG_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\nexport const getTags = () => async (dispatch) => {\n  try {\n    const res = await axios.get(config.BASE_URL + '/api/tags');\n\n    dispatch({\n      type: GET_TAGS,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: TAG_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,cAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,MAAMC,MAAM,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;EACrD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUL,MAAM,CAACM,QAAP,GAAmB,aAAYJ,OAAQ,EAAjD,CAAlB;IAEAC,QAAQ,CAAC;MACPI,IAAI,EAAEZ,OADC;MAEPa,OAAO,EAAEJ,GAAG,CAACK,IAAJ,CAASA;IAFX,CAAD,CAAR;EAID,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZ;IACAP,QAAQ,CAACJ,QAAQ,CAACW,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG,OAAnB,EAA4B,QAA5B,CAAT,CAAR;IAEAT,QAAQ,CAAC;MACPI,IAAI,EAAEV,SADC;MAEPW,OAAO,EAAE;QAACK,GAAG,EAAEH,GAAG,CAACC,QAAJ,CAAaG,UAAnB;QAA+BC,MAAM,EAAEL,GAAG,CAACC,QAAJ,CAAaI;MAApD;IAFF,CAAD,CAAR;EAID;AACF,CAjBM;AAmBP,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOb,QAAP,IAAoB;EAC/C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUL,MAAM,CAACM,QAAP,GAAkB,WAA5B,CAAlB;IAEAH,QAAQ,CAAC;MACPI,IAAI,EAAEX,QADC;MAEPY,OAAO,EAAEJ,GAAG,CAACK,IAAJ,CAASA;IAFX,CAAD,CAAR;EAID,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZP,QAAQ,CAACJ,QAAQ,CAACW,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG,OAAnB,EAA4B,QAA5B,CAAT,CAAR;IAEAT,QAAQ,CAAC;MACPI,IAAI,EAAEV,SADC;MAEPW,OAAO,EAAE;QAACK,GAAG,EAAEH,GAAG,CAACC,QAAJ,CAAaG,UAAnB;QAA+BC,MAAM,EAAEL,GAAG,CAACC,QAAJ,CAAaI;MAApD;IAFF,CAAD,CAAR;EAID;AACF,CAhBM"},"metadata":{},"sourceType":"module"}