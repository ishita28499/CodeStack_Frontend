{"ast":null,"code":"import { GET_POSTS, GET_POST, GET_TOP_POSTS, GET_TAG_POSTS, POST_ERROR, DELETE_POST, ADD_POST } from './posts.types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function posts() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSTS:\n    case GET_TOP_POSTS:\n    case GET_TAG_POSTS:\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: action.payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [action.payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post.id !== action.payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_POSTS","GET_POST","GET_TOP_POSTS","GET_TAG_POSTS","POST_ERROR","DELETE_POST","ADD_POST","initialState","posts","post","loading","error","state","action","type","payload","filter","id"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/redux/posts/posts.reducer.js"],"sourcesContent":["import {\n  GET_POSTS,\n  GET_POST,\n  GET_TOP_POSTS,\n  GET_TAG_POSTS,\n  POST_ERROR,\n  DELETE_POST,\n  ADD_POST,\n} from './posts.types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function posts(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n    case GET_TOP_POSTS:\n    case GET_TAG_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: action.payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post.id !== action.payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,QAPF,QAQO,eARP;AAUA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,IAAI,EAAE,IAFa;EAGnBC,OAAO,EAAE,IAHU;EAInBC,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,SAASH,KAAT,GAA6C;EAAA,IAA9BI,KAA8B,uEAAtBL,YAAsB;EAAA,IAARM,MAAQ;;EAC1D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKd,SAAL;IACA,KAAKE,aAAL;IACA,KAAKC,aAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELJ,KAAK,EAAEK,MAAM,CAACE,OAFT;QAGLL,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKT,QAAL;MACE,OAAO,EACL,GAAGW,KADE;QAELH,IAAI,EAAEI,MAAM,CAACE,OAFR;QAGLL,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKJ,QAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELJ,KAAK,EAAE,CAACK,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACJ,KAA1B,CAFF;QAGLE,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKL,WAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELJ,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACQ,EAAL,KAAYJ,MAAM,CAACE,OAAhD,CAFF;QAGLL,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKN,UAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELD,KAAK,EAAEE,MAAM,CAACE,OAFT;QAGLL,OAAO,EAAE;MAHJ,CAAP;;IAKF;MACE,OAAOE,KAAP;EAlCJ;AAoCD"},"metadata":{},"sourceType":"module"}