{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISHITA\\\\Downloads\\\\Atul\\\\Frontend\\\\src\\\\pages\\\\TagPage\\\\TagPage.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getTagPosts } from '../../redux/posts/posts.actions';\nimport { getTag } from '../../redux/tags/tags.actions';\nimport handleSorting from '../../services/handleSorting';\nimport LinkButton from '../../components/LinkButton/LinkButton.component';\nimport PostItem from '../../components/PostItem/PostItem.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport PageTitle from '../../components/PageTitle/PageTitle.component';\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup.component';\nimport './TagPage.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagPage = _ref => {\n  _s();\n\n  let {\n    getTag,\n    getTagPosts,\n    tag,\n    post: {\n      posts,\n      loading\n    },\n    match\n  } = _ref;\n  useEffect(() => {\n    getTagPosts(match.params.tagname);\n    getTag(match.params.tagname); // eslint-disable-next-line\n  }, [getTag, getTagPosts]);\n  const [sortType, setSortType] = useState('Newest');\n\n  if (tag.redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return tag.tag === null || tag.loading || loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n    type: \"page\",\n    width: \"75px\",\n    height: \"200px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: `Questions tagged [${tag.tag.tagname}] - Code Stack `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainbar\",\n      className: \"questions-page fc-black-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"questions-headline\",\n          children: [\"Questions tagged [\", tag.tag.tagname, \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-btn\",\n          children: /*#__PURE__*/_jsxDEV(LinkButton, {\n            text: 'Ask Question',\n            link: '/add/question',\n            type: 's-btn__primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-body\",\n        dangerouslySetInnerHTML: {\n          __html: tag.tag.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [new Intl.NumberFormat('en-IN').format(tag.tag.posts_count), ' ', tag.tag.posts_count === 1 ? 'question' : 'questions']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          buttons: ['Newest', 'Top', 'Views', 'Oldest'],\n          selected: sortType,\n          setSelected: setSortType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: tag.tag.posts_count === 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '30px 30px'\n          },\n          children: \"There are no questions from this tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : posts === null || posts === void 0 ? void 0 : posts.sort(handleSorting(sortType)).map((post, index) => /*#__PURE__*/_jsxDEV(PostItem, {\n          post: post\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagPage, \"uWQvnQ4G0gK5XHrkCTdOxabq/WU=\");\n\n_c = TagPage;\nTagPage.propTypes = {\n  getTag: PropTypes.func.isRequired,\n  getTagPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  tag: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  tag: state.tag\n});\n\nexport default connect(mapStateToProps, {\n  getTagPosts,\n  getTag\n})(TagPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"TagPage\");","map":{"version":3,"names":["React","useEffect","Fragment","useState","connect","Redirect","PropTypes","getTagPosts","getTag","handleSorting","LinkButton","PostItem","Spinner","PageTitle","ButtonGroup","TagPage","tag","post","posts","loading","match","params","tagname","sortType","setSortType","redirect","__html","description","Intl","NumberFormat","format","posts_count","margin","sort","map","index","propTypes","func","isRequired","object","mapStateToProps","state"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/pages/TagPage/TagPage.component.jsx"],"sourcesContent":["import React, {useEffect, Fragment, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {getTagPosts} from '../../redux/posts/posts.actions';\nimport {getTag} from '../../redux/tags/tags.actions';\nimport handleSorting from '../../services/handleSorting';\n\nimport LinkButton from '../../components/LinkButton/LinkButton.component';\nimport PostItem from '../../components/PostItem/PostItem.component';\nimport Spinner from '../../components/Spinner/Spinner.component';\nimport PageTitle from '../../components/PageTitle/PageTitle.component';\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup.component';\n\nimport './TagPage.styles.scss';\n\nconst TagPage = ({getTag, getTagPosts, tag, post: {posts, loading}, match}) => {\n  useEffect(() => {\n    getTagPosts(match.params.tagname);\n    getTag(match.params.tagname);\n    // eslint-disable-next-line\n  }, [getTag, getTagPosts]);\n\n  const [sortType, setSortType] = useState('Newest');\n\n  if (tag.redirect) {\n    return <Redirect to='/tags' />;\n  }\n\n  return tag.tag === null || tag.loading || loading ? (\n    <Spinner type='page' width='75px' height='200px' />\n  ) : (\n    <Fragment>\n      <PageTitle\n        title={`Questions tagged [${tag.tag.tagname}] - Code Stack `}\n      />\n      <div id='mainbar' className='questions-page fc-black-800'>\n        <div className='questions-grid'>\n          <h3 className='questions-headline'>\n            Questions tagged [{tag.tag.tagname}]\n          </h3>\n          <div className='questions-btn'>\n            <LinkButton\n              text={'Ask Question'}\n              link={'/add/question'}\n              type={'s-btn__primary'}\n            />\n          </div>\n        </div>\n        <p\n          className='fs-body'\n          dangerouslySetInnerHTML={{__html: tag.tag.description}}\n        />\n        <div className='questions-tabs'>\n          <span>\n            {new Intl.NumberFormat('en-IN').format(tag.tag.posts_count)}{' '}\n            {tag.tag.posts_count === 1 ? 'question' : 'questions'}\n          </span>\n          <ButtonGroup\n            buttons={['Newest', 'Top', 'Views', 'Oldest']}\n            selected={sortType}\n            setSelected={setSortType}\n          />\n        </div>\n        <div className='questions'>\n          {tag.tag.posts_count === 0 ? (\n            <h4 style={{margin: '30px 30px'}}>\n              There are no questions from this tag\n            </h4>\n          ) : (\n            posts\n              ?.sort(handleSorting(sortType))\n              .map((post, index) => <PostItem key={index} post={post} />)\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nTagPage.propTypes = {\n  getTag: PropTypes.func.isRequired,\n  getTagPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  tag: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n  tag: state.tag,\n});\n\nexport default connect(mapStateToProps, {getTagPosts, getTag})(TagPage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}