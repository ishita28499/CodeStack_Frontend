{"ast":null,"code":"import axios from 'axios';\nimport config from \"../../config\";\nimport { setAlert } from '../alert/alert.actions';\nimport { GET_COMMENTS, COMMENT_ERROR, ADD_COMMENT, DELETE_COMMENT } from './comments.types';\nexport const getComments = id => async dispatch => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/posts/comments/${id}`);\n    dispatch({\n      type: GET_COMMENTS,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: COMMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add COMMENT\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config_headers = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(config.BASE_URL + `/api/posts/comments/${postId}`, formData, config_headers);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data.data\n    });\n    dispatch(setAlert(res.data.message, 'success'));\n    dispatch(getComments(postId));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: COMMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Comment\n\nexport const deleteComment = CommentId => async dispatch => {\n  try {\n    const res = await axios.delete(config.BASE_URL + `/api/posts/comments/${CommentId}`);\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: CommentId\n    });\n    dispatch(setAlert(res.data.message, 'success'));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: COMMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","config","setAlert","GET_COMMENTS","COMMENT_ERROR","ADD_COMMENT","DELETE_COMMENT","getComments","id","dispatch","res","get","BASE_URL","type","payload","data","err","msg","response","statusText","status","addComment","postId","formData","config_headers","headers","post","message","deleteComment","CommentId","delete"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/redux/comments/comments.actions.js"],"sourcesContent":["import axios from 'axios';\n\nimport config from \"../../config\";\nimport {setAlert} from '../alert/alert.actions';\nimport {\n  GET_COMMENTS,\n  COMMENT_ERROR,\n  ADD_COMMENT,\n  DELETE_COMMENT,\n} from './comments.types';\n\nexport const getComments = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/posts/comments/${id}`);\n\n    dispatch({\n      type: GET_COMMENTS,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: COMMENT_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\n// Add COMMENT\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config_headers = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      config.BASE_URL + `/api/posts/comments/${postId}`,\n      formData,\n      config_headers\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data.data,\n    });\n\n    dispatch(setAlert(res.data.message, 'success'));\n\n    dispatch(getComments(postId));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: COMMENT_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (CommentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(config.BASE_URL + `/api/posts/comments/${CommentId}`);\n\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: CommentId,\n    });\n\n    dispatch(setAlert(res.data.message, 'success'));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: COMMENT_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}