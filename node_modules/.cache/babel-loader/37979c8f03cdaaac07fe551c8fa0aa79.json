{"ast":null,"code":"import axios from 'axios';\nimport config from \"../../config\";\nimport { setAlert } from '../alert/alert.actions';\nimport { GET_POSTS, GET_POST, GET_TOP_POSTS, GET_TAG_POSTS, POST_ERROR, DELETE_POST, ADD_POST } from './posts.types'; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(config.BASE_URL + '/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //GET TOP POSTS\n\nexport const getTopPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(config.BASE_URL + '/api/posts/top');\n    dispatch({\n      type: GET_TOP_POSTS,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //GET TAG POSTS\n\nexport const getTagPosts = tagName => async dispatch => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/posts/tag/${tagName}`);\n    dispatch({\n      type: GET_TAG_POSTS,\n      payload: res.data.data\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  const config_headers = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(config.BASE_URL + '/api/posts', formData, config_headers);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data.data\n    });\n    dispatch(setAlert(res.data.message, 'success'));\n    dispatch(getPosts());\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(config.BASE_URL + `/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert(res.data.message, 'success'));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","config","setAlert","GET_POSTS","GET_POST","GET_TOP_POSTS","GET_TAG_POSTS","POST_ERROR","DELETE_POST","ADD_POST","getPosts","dispatch","res","get","BASE_URL","type","payload","data","err","response","message","msg","statusText","status","getPost","id","getTopPosts","getTagPosts","tagName","addPost","formData","config_headers","headers","post","deletePost","delete"],"sources":["C:/Users/ISHITA/Downloads/Atul/Frontend/src/redux/posts/posts.actions.js"],"sourcesContent":["import axios from 'axios';\n\nimport config from \"../../config\";\nimport {setAlert} from '../alert/alert.actions';\nimport {\n  GET_POSTS,\n  GET_POST,\n  GET_TOP_POSTS,\n  GET_TAG_POSTS,\n  POST_ERROR,\n  DELETE_POST,\n  ADD_POST,\n} from './posts.types';\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(config.BASE_URL + '/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\n// Get post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\n//GET TOP POSTS\nexport const getTopPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(config.BASE_URL + '/api/posts/top');\n\n    dispatch({\n      type: GET_TOP_POSTS,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\n//GET TAG POSTS\nexport const getTagPosts = (tagName) => async (dispatch) => {\n  try {\n    const res = await axios.get(config.BASE_URL + `/api/posts/tag/${tagName}`);\n\n    dispatch({\n      type: GET_TAG_POSTS,\n      payload: res.data.data,\n    });\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config_headers = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(config.BASE_URL + '/api/posts', formData, config_headers);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data.data,\n    });\n\n    dispatch(setAlert(res.data.message, 'success'));\n\n    dispatch(getPosts());\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(config.BASE_URL + `/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(res.data.message, 'success'));\n  } catch (err) {\n    dispatch(setAlert(err.response.data.message, 'danger'));\n\n    dispatch({\n      type: POST_ERROR,\n      payload: {msg: err.response.statusText, status: err.response.status},\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}